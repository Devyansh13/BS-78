{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Devyansh\\\\Downloads\\\\BS\\\\Barter-system-pro-78-master\\\\Screens\\\\SignUpLoginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport db from \"../Config\";\nimport firebase from 'firebase';\n\nvar LoginSignUpScreen = function (_React$Component) {\n  _inherits(LoginSignUpScreen, _React$Component);\n\n  var _super = _createSuper(LoginSignUpScreen);\n\n  function LoginSignUpScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginSignUpScreen);\n\n    _this = _super.call(this);\n\n    _this.signUp = function _callee(email, password, confirmPassword) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(password !== confirmPassword)) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\", Alert.alert(\"Passwords do not match\"));\n\n            case 4:\n              firebase.auth().createUserWithEmailAndPassword(email, password).then(function () {\n                db.collection(\"Users\").add({\n                  Name: _this.state.Name,\n                  Contact: _this.state.Contact,\n                  emailId: _this.state.emailId,\n                  Address: _this.state.Address\n                });\n                return Alert.alert(\"User added succesfully\", \"\", [{\n                  text: \"OK\",\n                  onPress: function onPress() {\n                    return _this.setState({\n                      isModalVisible: false\n                    });\n                  }\n                }]);\n              }).catch(function (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                return alert(errorMessage);\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.login = function _callee2(email, password) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              firebase.auth().signInWithEmailAndPassword(email, password).then(function (userCredential) {\n                return alert(\"User login succesful\");\n              }).catch(function (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                return alert(errorMessage);\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.showModal = function () {\n      return React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: _this.state.isModalVisible,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.modalContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          width: \"100%\"\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, \"Registration Form\"), React.createElement(TextInput, {\n        placeholder: \"Name\",\n        style: styles.inputBox1,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            Name: text\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Contact\",\n        style: styles.inputBox1,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            Contact: text\n          });\n        },\n        keyboardType: \"numeric\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Address\",\n        style: styles.inputBox1,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            Address: text\n          });\n        },\n        multiline: true,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Email-id\",\n        style: styles.inputBox1,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            emailId: text\n          });\n        },\n        keyboardType: 'email-address',\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Password\",\n        style: styles.inputBox1,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            password: text\n          });\n        },\n        secureTextEntry: true,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Confirm Password\",\n        style: styles.inputBox1,\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            confirmPassword: text\n          });\n        },\n        secureTextEntry: true,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.searchButton,\n        onPress: function onPress() {\n          _this.signUp(_this.state.emailId, _this.state.password, _this.state.confirmPassword);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 14\n        }\n      }, \" Register\")), React.createElement(TouchableOpacity, {\n        style: styles.searchButton,\n        onPress: function onPress() {\n          _this.setState({\n            isModalVisible: false\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 14\n        }\n      }, \" Cancel\")))));\n    };\n\n    _this.state = {\n      emailId: \"\",\n      password: \"\",\n      Name: \"\",\n      Contact: \"\",\n      Address: \"\",\n      confirmPassword: \"\",\n      isModalVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginSignUpScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 3\n        }\n      }, this.showModal(), React.createElement(Text, {\n        style: styles.textContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 3\n        }\n      }, \"Barter System\"), React.createElement(TextInput, {\n        style: styles.inputBox1,\n        placeholder: \"Username\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            emailId: text\n          });\n        },\n        keyboardType: \"email-address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 3\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputBox2,\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 3\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.searchButton,\n        onPress: function onPress() {\n          _this2.login(_this2.state.emailId, _this2.state.password);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 3\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 80\n        }\n      }, \"Login\")), React.createElement(TouchableOpacity, {\n        style: styles.searchButton,\n        onPress: function onPress() {\n          _this2.setState({\n            isModalVisible: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 14\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 66\n        }\n      }, \"Sign Up\")));\n    }\n  }]);\n\n  return LoginSignUpScreen;\n}(React.Component);\n\nexport default LoginSignUpScreen;\nvar styles = StyleSheet.create({\n  searchButton: {\n    marginLeft: 120,\n    borderWidth: 1,\n    marginTop: 20,\n    height: 30,\n    width: 100,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'yellow'\n  },\n  inputBox1: {\n    marginLeft: 30,\n    marginRight: 30,\n    marginTop: 30,\n    borderWidth: 3\n  },\n  inputBox2: {\n    marginLeft: 30,\n    marginRight: 30,\n    marginTop: 10,\n    borderWidth: 3\n  },\n  textContainer: {\n    backgroundColor: 'yellow',\n    padding: 10,\n    fontSize: 22,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalContainer: {\n    backgroundColor: \"yellow\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Devyansh/Downloads/BS/Barter-system-pro-78-master/Screens/SignUpLoginScreen.js"],"names":["React","db","firebase","LoginSignUpScreen","signUp","email","password","confirmPassword","Alert","alert","auth","createUserWithEmailAndPassword","then","collection","add","Name","state","Contact","emailId","Address","text","onPress","setState","isModalVisible","catch","error","errorCode","code","errorMessage","message","login","signInWithEmailAndPassword","userCredential","showModal","styles","modalContainer","width","inputBox1","searchButton","textContainer","inputBox2","Component","StyleSheet","create","marginLeft","borderWidth","marginTop","height","alignItems","justifyContent","backgroundColor","marginRight","padding","fontSize","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Modal, Alert, ScrollView } from 'react-native';\nimport db from '../Config';\nimport firebase from 'firebase'\n\nclass LoginSignUpScreen extends React.Component{\n\n  constructor(){\n    super();\n    this.state={\n    emailId:\"\",\n    password:\"\",\n    Name:\"\",\n    Contact:\"\",\n    Address:\"\",\n    confirmPassword:\"\",\n    isModalVisible:false,\n    }\n  }\n\n  signUp=async(email,password,confirmPassword)=>{\n    if(password!==confirmPassword){\n      return Alert.alert(\"Passwords do not match\")\n    }\n    else{\n   firebase.auth().createUserWithEmailAndPassword(email, password)\n.then(() => {\n  db.collection(\"Users\").add({\n    Name:this.state.Name,\n    Contact:this.state.Contact,\n    emailId:this.state.emailId,\n    Address:this.state.Address\n  })\n  return Alert.alert(\n    \"User added succesfully\",\n    \"\",\n    [\n     \n      { text: \"OK\", onPress: () => this.setState({isModalVisible:false}) }\n    ]\n  );\n})\n\n.catch((error) => {\n  var errorCode = error.code;\n  var errorMessage = error.message;\n   return alert(errorMessage)\n  // ..\n});\n    }\n\n  }\n\n  login=async(email,password)=>{\n   firebase.auth().signInWithEmailAndPassword(email, password)\n  .then((userCredential) => {\n    return alert(\"User login succesful\")\n  })\n  .catch((error) => {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n      return alert(errorMessage)\n  });\n    }\n\n    showModal=()=>{\n      return(\n        <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={this.state.isModalVisible}\n        >\n          <View style={styles.modalContainer}>\n          <ScrollView style={{width:\"100%\",}}>\n            <Text>Registration Form</Text>\n  \n            <TextInput \n            placeholder=\"Name\" \n            style={styles.inputBox1} \n            onChangeText={(text) => {this.setState({ Name: text });}}\n            /> \n  \n            <TextInput \n            placeholder=\"Contact\" \n            style={styles.inputBox1} \n            onChangeText={(text) => {this.setState({ Contact: text });}}\n            keyboardType={\"numeric\"}\n            /> \n  \n            <TextInput \n            placeholder=\"Address\" \n            style={styles.inputBox1} \n            onChangeText={(text) => {this.setState({ Address: text });}}\n            multiline={true}\n            /> \n  \n            <TextInput \n            placeholder=\"Email-id\" \n            style={styles.inputBox1} \n            onChangeText={(text) => {this.setState({ emailId: text });}}\n            keyboardType={'email-address'}\n            /> \n  \n            <TextInput \n            placeholder=\"Password\" \n            style={styles.inputBox1} \n            onChangeText={(text) => {this.setState({ password: text });}}\n            secureTextEntry={true}\n            /> \n  \n            <TextInput \n            placeholder=\"Confirm Password\" \n            style={styles.inputBox1} \n            onChangeText={(text) => {this.setState({ confirmPassword: text });}}\n            secureTextEntry={true}\n            /> \n  \n            <TouchableOpacity\n            style={styles.searchButton}\n            onPress={()=>{this.signUp(this.state.emailId,this.state.password,this.state.confirmPassword)}\n            }\n            >\n             <Text> Register</Text>\n            </TouchableOpacity>\n  \n            <TouchableOpacity\n            style={styles.searchButton}\n            onPress={()=>{this.setState({isModalVisible:false})}}\n            >\n             <Text> Cancel</Text>\n            </TouchableOpacity>\n  \n  \n  \n            \n          </ScrollView>\n          </View>\n        </Modal>\n      )\n    }\n     \n\n  \n\nrender(){\nreturn(\n \n  <View\n  \n  >\n\n{this.showModal()}\n\n  <Text style={styles.textContainer}>Barter System</Text>\n\n  <TextInput style={styles.inputBox1} placeholder=\"Username\"  onChangeText={(text)=>{this.setState({emailId:text})}}\n            keyboardType=\"email-address\"/>\n  <TextInput style={styles.inputBox2} placeholder=\"Password\" onChangeText={(text)=>{this.setState({password:text})}}\n            secureTextEntry={true}/>\n  \n  <TouchableOpacity style={styles.searchButton} \n            onPress={()=>{this.login(this.state.emailId,this.state.password)}}><Text>Login</Text></TouchableOpacity>\n\n             <TouchableOpacity style={styles.searchButton} \n            onPress={()=>{this.setState({isModalVisible:true})}}><Text>Sign Up</Text></TouchableOpacity>\n\n  </View>\n)\n}\n}\n\nexport default LoginSignUpScreen;\n\nconst styles = StyleSheet.create({\n  searchButton:{\n      marginLeft:120,\n      borderWidth:1,\n      marginTop:20,\n      height:30,\n      width:100,\n      alignItems:'center',\n      justifyContent:'center',\n      backgroundColor:'yellow'\n    },\ninputBox1: {\n    marginLeft:30,\n    marginRight:30,\n    marginTop:30,\n    borderWidth: 3\n  },\n  inputBox2: {\n    marginLeft:30,\n    marginRight:30,\n    marginTop:10,\n    borderWidth: 3\n  },\n  textContainer: {\n    backgroundColor: 'yellow',\n    padding: 10, \n     fontSize: 22,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  modalContainer:{\n    backgroundColor:\"yellow\",\n  },\n})"]},"metadata":{},"sourceType":"module"}